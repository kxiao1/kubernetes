apiVersion: v1
kind: Pod
metadata:
  annotations:
    checksum/configuration: 2a233bd0d96bae46e9277706803c6f6edd73b75ea6500e1ef43b78009b339ec3
    container.seccomp.security.alpha.kubernetes.io/mysql: runtime/default
    container.seccomp.security.alpha.kubernetes.io/preserve-logs-symlinks: runtime/default
  creationTimestamp: "2024-12-01T02:34:56Z"
  generateName: mysql-1733020493-
  labels:
    app.kubernetes.io/component: primary
    app.kubernetes.io/instance: mysql-1733020493
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mysql
    app.kubernetes.io/part-of: mysql
    app.kubernetes.io/version: 8.4.3
    controller-revision-hash: mysql-1733020493-759cbf49bc
    helm.sh/chart: mysql-12.1.0
    statefulset.kubernetes.io/pod-name: mysql-1733020493-0
  name: mysql-1733020493-0
  namespace: default
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: StatefulSet
    name: mysql-1733020493
    uid: 75be5a3c-1077-4ecb-a1f0-9a089b46b6d3
  resourceVersion: "66392"
  uid: 23a8adfe-16dc-4f74-a316-1c36acccbfb2
spec:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchLabels:
              app.kubernetes.io/instance: mysql-1733020493
              app.kubernetes.io/name: mysql
          topologyKey: kubernetes.io/hostname
        weight: 1
  automountServiceAccountToken: false
  containers:
  - env:
    - name: BITNAMI_DEBUG
      value: "false"
    - name: MYSQL_ROOT_PASSWORD
      valueFrom:
        secretKeyRef:
          key: mysql-root-password
          name: mysql-1733020493
    - name: MYSQL_ENABLE_SSL
      value: "no"
    - name: MYSQL_PORT
      value: "3306"
    - name: MYSQL_DATABASE
      value: my_database
    image: docker.io/bitnami/mysql:8.4.3-debian-12-r4
    imagePullPolicy: IfNotPresent
    livenessProbe:
      exec:
        command:
        - /bin/bash
        - -ec
        - |
          password_aux="${MYSQL_ROOT_PASSWORD:-}"
          if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
              password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
          fi
          mysqladmin status -uroot -p"${password_aux}"
      failureThreshold: 3
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    name: mysql
    ports:
    - containerPort: 3306
      name: mysql
      protocol: TCP
    readinessProbe:
      exec:
        command:
        - /bin/bash
        - -ec
        - |
          password_aux="${MYSQL_ROOT_PASSWORD:-}"
          if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
              password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
          fi
          mysqladmin ping -uroot -p"${password_aux}" | grep "mysqld is alive"
      failureThreshold: 3
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources:
      limits:
        cpu: 750m
        ephemeral-storage: 2Gi
        memory: 768Mi
      requests:
        cpu: 500m
        ephemeral-storage: 50Mi
        memory: 512Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsGroup: 1001
      runAsNonRoot: true
      runAsUser: 1001
      seLinuxOptions: {}
      seccompProfile:
        type: RuntimeDefault
    startupProbe:
      exec:
        command:
        - /bin/bash
        - -ec
        - |
          password_aux="${MYSQL_ROOT_PASSWORD:-}"
          if [[ -f "${MYSQL_ROOT_PASSWORD_FILE:-}" ]]; then
              password_aux=$(cat "$MYSQL_ROOT_PASSWORD_FILE")
          fi
          mysqladmin ping -uroot -p"${password_aux}" | grep "mysqld is alive"
      failureThreshold: 10
      initialDelaySeconds: 15
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /bitnami/mysql
      name: data
    - mountPath: /tmp
      name: empty-dir
      subPath: tmp-dir
    - mountPath: /opt/bitnami/mysql/conf
      name: empty-dir
      subPath: app-conf-dir
    - mountPath: /opt/bitnami/mysql/tmp
      name: empty-dir
      subPath: app-tmp-dir
    - mountPath: /opt/bitnami/mysql/logs
      name: empty-dir
      subPath: app-logs-dir
    - mountPath: /opt/bitnami/mysql/conf/my.cnf
      name: config
      subPath: my.cnf
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostname: mysql-1733020493-0
  initContainers:
  - args:
    - -ec
    - |
      #!/bin/bash

      . /opt/bitnami/scripts/libfs.sh
      # We copy the logs folder because it has symlinks to stdout and stderr
      if ! is_dir_empty /opt/bitnami/mysql/logs; then
        cp -r /opt/bitnami/mysql/logs /emptydir/app-logs-dir
      fi
    command:
    - /bin/bash
    image: docker.io/bitnami/mysql:8.4.3-debian-12-r4
    imagePullPolicy: IfNotPresent
    name: preserve-logs-symlinks
    resources:
      limits:
        cpu: 750m
        ephemeral-storage: 2Gi
        memory: 768Mi
      requests:
        cpu: 500m
        ephemeral-storage: 50Mi
        memory: 512Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsGroup: 1001
      runAsNonRoot: true
      runAsUser: 1001
      seLinuxOptions: {}
      seccompProfile:
        type: RuntimeDefault
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /emptydir
      name: empty-dir
  nodeName: minikube
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1001
    fsGroupChangePolicy: Always
  serviceAccount: mysql-1733020493
  serviceAccountName: mysql-1733020493
  subdomain: mysql-1733020493-headless
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: data
    persistentVolumeClaim:
      claimName: data-mysql-1733020493-0
  - configMap:
      defaultMode: 420
      name: mysql-1733020493
    name: config
  - emptyDir: {}
    name: empty-dir
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2024-12-01T02:35:15Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2024-12-01T02:34:57Z"
    message: 'containers with unready status: [mysql]'
    reason: ContainersNotReady
    status: "False"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2024-12-01T02:34:57Z"
    message: 'containers with unready status: [mysql]'
    reason: ContainersNotReady
    status: "False"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2024-12-01T02:34:57Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://27e20fa7a2b6ed4b34362b783e3de86ae4b6b0138ce3353c2ad16b6e514550c4
    image: bitnami/mysql:8.4.3-debian-12-r4
    imageID: docker-pullable://bitnami/mysql@sha256:848355242581210da87ade548c1ea096692a618e889ca1d602d9d5b4cfba6de0
    lastState:
      terminated:
        containerID: docker://27e20fa7a2b6ed4b34362b783e3de86ae4b6b0138ce3353c2ad16b6e514550c4
        exitCode: 1
        finishedAt: "2024-12-01T03:01:20Z"
        reason: Error
        startedAt: "2024-12-01T03:01:20Z"
    name: mysql
    ready: false
    restartCount: 10
    started: false
    state:
      waiting:
        message: back-off 5m0s restarting failed container=mysql pod=mysql-1733020493-0_default(23a8adfe-16dc-4f74-a316-1c36acccbfb2)
        reason: CrashLoopBackOff
  hostIP: 192.168.49.2
  initContainerStatuses:
  - containerID: docker://eb03d7a20b9dc55f8107020933398c29112bfafb6518ce89eb0338d9aedb6f63
    image: bitnami/mysql:8.4.3-debian-12-r4
    imageID: docker-pullable://bitnami/mysql@sha256:848355242581210da87ade548c1ea096692a618e889ca1d602d9d5b4cfba6de0
    lastState: {}
    name: preserve-logs-symlinks
    ready: true
    restartCount: 0
    state:
      terminated:
        containerID: docker://eb03d7a20b9dc55f8107020933398c29112bfafb6518ce89eb0338d9aedb6f63
        exitCode: 0
        finishedAt: "2024-12-01T02:35:15Z"
        reason: Completed
        startedAt: "2024-12-01T02:35:15Z"
  phase: Running
  podIP: 172.17.0.6
  podIPs:
  - ip: 172.17.0.6
  qosClass: Burstable
  startTime: "2024-12-01T02:34:57Z"
